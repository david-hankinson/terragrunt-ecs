name: ecr-delete

on:
  workflow_dispatch: # Allows manual triggering of this workflow

env:
  AWS_REGION: ca-central-1

jobs:
  terragrunt-delete:
    name: terragrunt-delete
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials using OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      # Step 3: Verify identity (optional for debugging)
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity

      # Step 4: Terragrunt Plan (recommended before deletion to check impacted resources)
      - name: 'Terragrunt Plan Destroy'
        uses: the-commons-project/terragrunt-github-actions@master
        with:
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: './infra-deploy'
          args: '--terragrunt-non-interactive -destroy'

      # Step 5: Terragrunt Destroy
      - name: 'Terragrunt Destroy'
        uses: the-commons-project/terragrunt-github-actions@master
        with:
          tf_actions_subcommand: 'destroy'
          tf_actions_working_dir: './infra-deploy'
          args: '--terragrunt-non-interactive --force'